{"version":3,"sources":["store/favorites.ts","components/Button.ts","components/Card.ts","screens/Comment.tsx","components/Loader.tsx","components/Grid.ts","store/comments.ts","screens/Home.tsx","screens/Menu.tsx","screens/Favorites.tsx","components/Form.ts","components/Container.ts","helpers/helpers.ts","screens/validationSchema.ts","screens/Filter.tsx","screens/AddComment.tsx","assets/icons/404.svg","screens/NotFound.tsx","App.tsx","store.ts","reportWebVitals.ts","GlobalStyle.tsx","index.tsx"],"names":["favoritesSlice","createSlice","name","initialState","list","loading","reducers","favoriteAdded","state","action","payload","favoriteRemoved","filter","comment","id","favoritesLoading","actions","selectFavorites","favorites","selectFavoritesLoading","Button","styled","button","props","secondary","Card","div","Top","Bottom","Name","h3","Email","span","Content","p","Comment","email","body","removable","favoritable","dispatch","useDispatch","onClick","StyledLoader","Loader","className","Grid","commentsSlice","error","commentsAdded","commentsError","commentsLoading","commentAdded","newId","length","Math","max","map","selectComments","comments","selectCommentsError","selectCommentsLoading","useEffect","React","Home","useSelector","fetch","then","response","ok","json","console","warn","status","data","slice","catch","Nav","ul","Item","li","SubSection","SubItem","StyledNavLink","NavLink","StyledSubNavLink","Menu","to","exact","activeClassName","Favorites","favorite","Form","FormikForm","Label","label","Field","FormikField","ErrorMessage","RadioGroup","Container","removeLetters","letters","text","regex","RegExp","replace","leaveLetters","split","letter","includes","join","addCommentValidationSchema","Yup","shape","min","matches","required","filterValidationSchema","select","Result","Filter","useState","result","setResult","initialValues","validationSchema","onSubmit","a","htmlFor","placeholder","component","rows","cols","type","value","AddComment","Title","h2","Image","img","NotFound","src","NotFoundImg","alt","Background","Main","App","path","store","configureStore","reducer","favoritesReducer","commentsReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","GlobalStyle","createGlobalStyle","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.897f807e.chunk.js","sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nimport { RootState } from '../store';\nimport { IComment } from \"../types\";\n\ninterface FavoritesState {\n    list: IComment[],\n    loading: Boolean,\n}\nexport const initialState: FavoritesState = {\n    list: [],\n    loading: false,\n}\n\nconst favoritesSlice = createSlice({\n    name: 'favorites',\n    initialState,\n    reducers: {\n        favoriteAdded(state, action: PayloadAction<IComment>) {\n            state.list = [...state.list, { ...action.payload }]\n        },\n        favoriteRemoved(state, action: PayloadAction<number>) {\n            state.list = state.list.filter((comment: IComment) => {\n                return comment.id !== action.payload;\n            })\n        },\n        favoritesLoading(state, action: PayloadAction<boolean>) {\n            state.loading = action.payload;\n        }\n    }\n})\n\nexport const { favoriteAdded, favoriteRemoved, favoritesLoading } = favoritesSlice.actions\n\nexport default favoritesSlice.reducer\n\nexport const selectFavorites = (state: RootState) => state.favorites.list;\nexport const selectFavoritesLoading = (state: RootState) => state.favorites.loading;\n","import styled from \"styled-components\";\n\nconst Button = styled.button<{ secondary?: boolean }>`\n  cursor:pointer; \n  height: 2rem;\n  border-radius: 2px;\n  color: ${(props) => props.secondary ? '#1890ff' : '#fff'};\n  background: ${(props) => props.secondary ? '#fff' : '#1890ff'};\n  border:none;\n  box-shadow: ${(props) => props.secondary ? 'none' : '0 2px 0 rgba(0,0,0,.045)'};\n  :hover{\n    background-color: ${(props) => props.secondary ? 'rgb(225,245,255)' : '#6cb7fd'};\n  }\n`;\n\nexport default Button;","import styled from \"styled-components\";\n\nconst Card = styled.div`\n  background-color: white;\n  border-radius: 2px;\n  border: 1px solid rgb(236, 236, 236);\n  min-width: 200px;\n`;\nexport const Top = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  border-bottom: 1px solid rgb(236, 236, 236);\n  padding: 1rem;\n`;\nexport const Bottom = styled.div`\n  padding: 1rem;\n`;\n\nexport default Card;","import React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\n\nimport { favoriteAdded, favoriteRemoved } from \"../store/favorites\";\nimport { IComment } from \"../types\";\n\nimport Button from \"../components/Button\";\nimport Card, { Top, Bottom } from \"../components/Card\";\n\nconst Name = styled.h3`\n  font-weight: 600;\n`;\nconst Email = styled.span`\n  font-size: 0.8rem;\n`;\nconst Content = styled.p`\n  font-size: 0.8rem;\n  margin: 0.5rem 0;\n`;\n\nexport interface CommentProps extends IComment {\n  removable?: Boolean;\n  favoritable?: Boolean;\n}\nconst Comment: React.SFC<CommentProps> = ({\n  name,\n  email,\n  body,\n  id,\n  removable,\n  favoritable,\n}) => {\n  const dispatch = useDispatch();\n  return (\n    <Card>\n      <Top>\n        <Name>{name}</Name>\n        {favoritable && (\n          <Button\n            onClick={() => dispatch(favoriteAdded({ name, email, body, id }))}\n            secondary={true}\n          >\n            Dodaj do wybranych\n          </Button>\n        )}\n        {removable && (\n          <Button onClick={() => dispatch(favoriteRemoved(id))} secondary>\n            Usuń\n          </Button>\n        )}\n      </Top>\n      <Bottom>\n        <Email>{email}</Email>\n        <Content>{body}</Content>\n      </Bottom>\n    </Card>\n  );\n};\n\nexport default Comment;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nconst StyledLoader = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n  .lds-roller {\n    display: inline-block;\n    position: relative;\n    width: 80px;\n    height: 80px;\n  }\n  .lds-roller div {\n    animation: lds-roller 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\n    transform-origin: 40px 40px;\n  }\n  .lds-roller div:after {\n    content: \" \";\n    display: block;\n    position: absolute;\n    width: 7px;\n    height: 7px;\n    border-radius: 50%;\n    background: #cef;\n    margin: -4px 0 0 -4px;\n  }\n  .lds-roller div:nth-child(1) {\n    animation-delay: -0.036s;\n  }\n  .lds-roller div:nth-child(1):after {\n    top: 63px;\n    left: 63px;\n  }\n  .lds-roller div:nth-child(2) {\n    animation-delay: -0.072s;\n  }\n  .lds-roller div:nth-child(2):after {\n    top: 68px;\n    left: 56px;\n  }\n  .lds-roller div:nth-child(3) {\n    animation-delay: -0.108s;\n  }\n  .lds-roller div:nth-child(3):after {\n    top: 71px;\n    left: 48px;\n  }\n  .lds-roller div:nth-child(4) {\n    animation-delay: -0.144s;\n  }\n  .lds-roller div:nth-child(4):after {\n    top: 72px;\n    left: 40px;\n  }\n  .lds-roller div:nth-child(5) {\n    animation-delay: -0.18s;\n  }\n  .lds-roller div:nth-child(5):after {\n    top: 71px;\n    left: 32px;\n  }\n  .lds-roller div:nth-child(6) {\n    animation-delay: -0.216s;\n  }\n  .lds-roller div:nth-child(6):after {\n    top: 68px;\n    left: 24px;\n  }\n  .lds-roller div:nth-child(7) {\n    animation-delay: -0.252s;\n  }\n  .lds-roller div:nth-child(7):after {\n    top: 63px;\n    left: 17px;\n  }\n  .lds-roller div:nth-child(8) {\n    animation-delay: -0.288s;\n  }\n  .lds-roller div:nth-child(8):after {\n    top: 56px;\n    left: 12px;\n  }\n  @keyframes lds-roller {\n    0% {\n      transform: rotate(0deg);\n    }\n    100% {\n      transform: rotate(360deg);\n    }\n  }\n`;\nexport interface LoaderProps {}\n\nconst Loader: React.SFC<LoaderProps> = () => {\n  return (\n    <StyledLoader>\n      <div className=\"lds-roller\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </StyledLoader>\n  );\n};\n\nexport default Loader;\n","import styled from \"styled-components\";\n\nconst Grid = styled.div`\n    display: grid;\n    grid-gap: 1rem;\n`;\n\nexport default Grid;","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\n\nimport { RootState, AppDispatch } from '../store';\nimport { INewComment, IComment, IAPIComment } from \"../types\";\n\ninterface CommentsState {\n    list: IComment[],\n    loading: Boolean,\n    error: string,\n}\nexport const initialState: CommentsState = {\n    list: [],\n    loading: false,\n    error: ''\n}\n\nconst commentsSlice = createSlice({\n    name: 'comments',\n    initialState,\n    reducers: {\n        commentsAdded(state, action: PayloadAction<[IAPIComment]>) {\n            state.list = action.payload;\n        },\n        commentsError(state, action: PayloadAction<string>) {\n            state.error = action.payload;\n        },\n        commentsLoading(state, action: PayloadAction<boolean>) {\n            state.loading = action.payload\n        },\n        commentAdded(state, action: PayloadAction<INewComment>) {\n            let newId: number = state.list.length > 0 ? Math.max(...state.list.map((comment: IComment) => comment.id)) + 1 : 1;\n            state.list = [...state.list, { ...action.payload, id: newId }]\n        },\n    }\n})\n\nexport const { commentsAdded, commentsError, commentsLoading, commentAdded } = commentsSlice.actions\n\nexport default commentsSlice.reducer\n\nexport const selectComments = (state: RootState) => state.comments.list;\nexport const selectCommentsError = (state: RootState) => state.comments.error;\nexport const selectCommentsLoading = (state: RootState) => state.comments.loading;\n\nexport const getComments = () => (dispatch: AppDispatch) => {\n    fetch('https://jsonplaceholder.typicode.com/comments').then((response) => {\n        if (response.ok) {\n            return response.json();\n        } else {\n            dispatch(commentsError('There was an error when trying to fetch comments'));\n            console.warn('Could not fetch comments', response.status);\n            dispatch(commentsLoading(false));\n        }\n    }).then((data) => {\n        dispatch(commentsAdded(data.slice(data.length - 21)));\n        dispatch(commentsLoading(false))\n    }).catch((error) => {\n        dispatch(commentsError('There was an error when trying to fetch comments'));\n        console.warn('Could not fetch comments', error);\n        dispatch(commentsLoading(false));\n    });\n};","import * as React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Comment from \"./Comment\";\nimport Loader from \"../components/Loader\";\nimport Grid from \"../components/Grid\";\nimport { IComment } from \"../types\";\nimport {\n  selectComments,\n  selectCommentsError,\n  selectCommentsLoading,\n  getComments,\n  commentsLoading,\n} from \"../store/comments\";\n\nconst { useEffect } = React;\n\nexport interface HomeProps {}\n\nconst Home: React.SFC<HomeProps> = () => {\n  const comments: IComment[] = useSelector(selectComments);\n  const error = useSelector(selectCommentsError);\n  const loading = useSelector(selectCommentsLoading);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    comments.length < 1 &&\n      dispatch(commentsLoading(true)) &&\n      dispatch(getComments());\n  }, [comments, dispatch]);\n\n  return loading ? (\n    <Loader />\n  ) : error ? (\n    <p>{error}</p>\n  ) : (\n    <Grid>\n      {comments.map((comment: IComment) => {\n        return (\n          <Comment\n            name={comment.name}\n            email={comment.email}\n            body={comment.body}\n            id={comment.id}\n            key={comment.id}\n            favoritable\n          />\n        );\n      })}\n    </Grid>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink } from \"react-router-dom\";\n\nconst Nav = styled.ul`\n  background-color: white;\n  font-size: 1rem;\n  padding: 2rem 0;\n  border-bottom: 1px solid rgb(236, 236, 236);\n  width: 100%;\n  height: auto;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  @media only screen and (min-width: 600px) {\n    position: sticky;\n    top: 0;\n    height: 100vh;\n    width: 200px;\n    padding: 4rem 0;\n    justify-content: initial;\n    align-items: baseline;\n    border-right: 1px solid rgb(236, 236, 236);\n  }\n`;\nconst Item = styled.li`\n  color: rgb(121, 120, 140);\n  width: 100%;\n  .selected {\n    background-color: rgb(225, 245, 255);\n    border-right: 3px solid rgb(53, 129, 255);\n    color: rgb(53, 129, 255);\n  }\n`;\nconst SubSection = styled.ul`\n  font-size: 0.8rem;\n`;\nconst SubItem = styled.li`\n  color: rgb(121, 120, 140);\n  width: 100%;\n  .selected {\n    background-color: rgb(225, 245, 255);\n    border-right: 3px solid rgb(53, 129, 255);\n    color: rgb(53, 129, 255);\n  }\n`;\nconst StyledNavLink = styled(NavLink)`\n  display: block;\n  padding: 0.8rem 0 0.8rem 3rem;\n`;\nconst StyledSubNavLink = styled(NavLink)`\n  display: block;\n  padding: 0.8rem 0 0.8rem 3rem;\n  padding-left: 4rem;\n`;\n\nexport interface MenuProps {}\n\nconst Menu: React.SFC<MenuProps> = () => {\n  return (\n    <nav>\n      <Nav>\n        <Item>\n          <StyledNavLink to=\"/\" exact activeClassName=\"selected\">\n            Strona Główna\n          </StyledNavLink>\n        </Item>\n        <Item>\n          <StyledNavLink to=\"/favorites\" activeClassName=\"selected\">\n            Wybrane komentarze\n          </StyledNavLink>\n          <SubSection>\n            <SubItem>\n              <StyledSubNavLink to=\"/add-comment\" activeClassName=\"selected\">\n                Dodaj komentarz\n              </StyledSubNavLink>\n            </SubItem>\n          </SubSection>\n        </Item>\n\n        <Item>\n          <StyledNavLink to=\"/filter\" activeClassName=\"selected\">\n            Filtr\n          </StyledNavLink>\n        </Item>\n      </Nav>\n    </nav>\n  );\n};\n\nexport default Menu;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\n\nimport { IComment } from \"../types\";\nimport Comment from \"./Comment\";\nimport Grid from \"../components/Grid\";\nimport Loader from \"../components/Loader\";\nimport { selectFavorites, selectFavoritesLoading } from \"../store/favorites\";\n\nexport interface FavoritesProps {}\n\nconst Favorites: React.SFC<FavoritesProps> = () => {\n  const favorites = useSelector(selectFavorites);\n  const loading = useSelector(selectFavoritesLoading);\n  return !loading ? (\n    <Grid>\n      {favorites.map((favorite: IComment) => {\n        return (\n          <Comment\n            id={favorite.id}\n            name={favorite.name}\n            email={favorite.email}\n            body={favorite.body}\n            key={favorite.id}\n            removable\n          />\n        );\n      })}\n    </Grid>\n  ) : (\n    <Loader />\n  );\n};\n\nexport default Favorites;\n","import styled from \"styled-components\";\nimport { Field as FormikField, Form as FormikForm } from \"formik\";\n\nconst Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Label = styled.label`\n  color: #607d8b;\n`;\nexport const Field = styled(FormikField)`\n  border-radius: 2px;\n  border: 1px solid #d9d9d9;\n  margin: 0.5rem 0;\n  padding: 0.2rem 0.8rem;\n  color: rgba(0,0,0,.85);\n  font-size: 14px;\n  ::placeholder{\n      color:rgb(181,177,177);\n  }\n`;\nexport const ErrorMessage = styled.div`\n  font-size:14px;\n  color: #E91E63;\n  margin-bottom: 0.5rem;\n  height: 1rem;`;\n\nexport const RadioGroup = styled.div`\nlabel:not(:last-child){\n  margin-right: 1rem;\n}\ninput{\n    margin-right: 0.5rem;\n  }\n`;\n\nexport default Form;","import styled from \"styled-components\";\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n`;\n\nexport default Container;","export const removeLetters = (letters: string, text: string) => {\n    const regex = new RegExp(`[${letters}]`, 'g');\n    return text.replace(regex, \"\");\n}\n\nexport const leaveLetters = (letters: string, text: string) => {\n    return text.split('').filter(letter => letters.includes(letter)).join(\"\");\n}","import * as Yup from \"yup\";\n\nexport const addCommentValidationSchema = Yup.object().shape({\n    name: Yup.string().min(3, \"Too Short!\").matches(/[a-z]/).required(\"Name is required\"),\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\n    body: Yup.string().min(2, \"Too Short!\").required(\"Body is required\"),\n});\n\nexport const filterValidationSchema = Yup.object().shape({\n    letters: Yup.string()\n        .matches(/[a-zA-Z]/)\n        .required(\"Letters are required\"),\n    text: Yup.string()\n        .matches(/^[a-zA-Z\\s]*$/)\n        .required(\"Text is required\"),\n    select: Yup.string().min(2, \"Too Short!\").required(\"Select is required\"),\n});","import React, { useState } from \"react\";\nimport { Formik, ErrorMessage as FormikErrorMessage } from \"formik\";\nimport styled from \"styled-components\";\n\nimport Form, {\n  Field,\n  Label,\n  ErrorMessage,\n  RadioGroup,\n} from \"../components/Form\";\nimport Container from \"../components/Container\";\nimport Button from \"../components/Button\";\nimport Card, { Top, Bottom } from \"../components/Card\";\nimport { leaveLetters, removeLetters } from \"../helpers/helpers\";\nimport { filterValidationSchema as validationSchema } from \"./validationSchema\";\n\nconst Result = styled.div`\n  text-align: center;\n  width: 100%;\n  border: 1px solid rgb(236, 236, 236);\n  margin-top: 1rem;\n  padding: 0.5rem;\n`;\n\nexport interface FilterProps {}\n\nconst Filter: React.SFC<FilterProps> = () => {\n  const [result, setResult] = useState(\"\");\n  return (\n    <Container>\n      <Card>\n        <Top>Filtr</Top>\n        <Bottom>\n          <Formik\n            initialValues={{\n              letters: \"\",\n              text: \"\",\n              select: \"leave\",\n            }}\n            validationSchema={validationSchema}\n            onSubmit={async ({ letters, text, select }) => {\n              select === \"remove\"\n                ? setResult(removeLetters(letters, text))\n                : setResult(leaveLetters(letters, text));\n            }}\n          >\n            <Form>\n              <Label htmlFor=\"letters\">Litery</Label>\n              <Field id=\"letters\" name=\"letters\" placeholder=\"[a-Z]\" />\n              <ErrorMessage>\n                <FormikErrorMessage name=\"letters\" />\n              </ErrorMessage>\n              <Label htmlFor=\"text\">Tekst</Label>\n              <Field\n                component=\"textarea\"\n                rows=\"4\"\n                cols=\"17\"\n                id=\"text\"\n                name=\"text\"\n                placeholder=\"[a-Z\\s]\"\n              />\n              <ErrorMessage>\n                <FormikErrorMessage name=\"text\" />\n              </ErrorMessage>\n              <RadioGroup>\n                <Label>\n                  <Field type=\"radio\" id=\"select\" name=\"select\" value=\"leave\" />\n                  Pozostaw\n                </Label>\n                <Label>\n                  <Field\n                    type=\"radio\"\n                    id=\"select\"\n                    name=\"select\"\n                    value=\"remove\"\n                  />\n                  Usuń\n                </Label>\n              </RadioGroup>\n              <ErrorMessage>\n                <FormikErrorMessage name=\"select\" />\n              </ErrorMessage>\n              <Button type=\"submit\">Submit</Button>\n            </Form>\n          </Formik>\n          {result && (\n            <Result>\n              <p>Result: {result}</p>\n            </Result>\n          )}\n        </Bottom>\n      </Card>\n    </Container>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\nimport { Formik, ErrorMessage as FormikErrorMessage } from \"formik\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport { commentAdded } from \"../store/comments\";\nimport Form, { Field, Label, ErrorMessage } from \"../components/Form\";\nimport Container from \"../components/Container\";\nimport Button from \"../components/Button\";\nimport Card, { Top, Bottom } from \"../components/Card\";\nimport { addCommentValidationSchema as validationSchema } from \"./validationSchema\";\n\nexport interface AddCommentProps {}\n\nconst AddComment: React.SFC<AddCommentProps> = () => {\n  const dispatch = useDispatch();\n  return (\n    <Container>\n      <Card>\n        <Top>Dodaj komentarz</Top>\n        <Bottom>\n          <Formik\n            initialValues={{\n              name: \"\",\n              email: \"\",\n              body: \"\",\n            }}\n            validationSchema={validationSchema}\n            onSubmit={({ name, email, body }) => {\n              dispatch(commentAdded({ name, email, body }));\n            }}\n          >\n            <Form>\n              <Label htmlFor=\"name\">Nazwa</Label>\n              <Field id=\"name\" name=\"name\" placeholder=\"Jane\" />\n              <ErrorMessage>\n                <FormikErrorMessage name=\"name\" />\n              </ErrorMessage>\n              <Label htmlFor=\"email\">Email</Label>\n              <Field\n                id=\"email\"\n                name=\"email\"\n                placeholder=\"jane@acme.com\"\n                type=\"email\"\n              />\n              <ErrorMessage>\n                <FormikErrorMessage name=\"email\" />\n              </ErrorMessage>\n              <Label htmlFor=\"body\">Treść</Label>\n              <Field\n                component=\"textarea\"\n                id=\"body\"\n                name=\"body\"\n                placeholder=\"This is the content of your comment\"\n              />\n              <ErrorMessage>\n                <FormikErrorMessage name=\"body\" />\n              </ErrorMessage>\n              <Button type=\"submit\">Dodaj</Button>\n            </Form>\n          </Formik>\n        </Bottom>\n      </Card>\n    </Container>\n  );\n};\n\nexport default AddComment;\n","export default __webpack_public_path__ + \"static/media/404.f24ec84f.svg\";","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Container from \"../components/Container\";\nimport NotFoundImg from \"../assets/icons/404.svg\";\n\nconst Title = styled.h2`\n  font-size: 1.5rem;\n  font-weight: 600;\n`;\nconst Image = styled.img`\n  width: 300px;\n`;\n\nconst NotFound: React.SFC = () => {\n  return (\n    <Container>\n      <Title>Nic tutaj nie ma...</Title>\n      <Image src={NotFoundImg} alt=\"404\" />\n    </Container>\n  );\n};\n\nexport default NotFound;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport styled from \"styled-components\";\n\nimport Home from \"./screens/Home\";\nimport Menu from \"./screens/Menu\";\nimport Favorites from \"./screens/Favorites\";\nimport Filter from \"./screens/Filter\";\nimport AddComment from \"./screens/AddComment\";\nimport NotFound from \"./screens/NotFound\";\n\nconst Background = styled.div`\n  min-height: 100vh;\n  background-color: #f9fcff;\n  display: flex;\n  flex-direction: column;\n  @media only screen and (min-width: 600px) {\n    flex-direction: row;\n  }\n`;\nconst Main = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: baseline;\n  flex-wrap: wrap;\n  padding: 4rem 1rem;\n  width: 100%;\n`;\n\nconst App: React.SFC = () => {\n  return (\n    <Background>\n      <Router>\n        <Menu />\n        <Main>\n          <Switch>\n            <Route exact path=\"/\" component={Home} />\n            <Route path=\"/filter\" component={Filter} />\n            <Route path=\"/favorites\" component={Favorites} />\n            <Route path=\"/add-comment\" component={AddComment} />\n            <Route component={NotFound} />\n          </Switch>\n        </Main>\n      </Router>\n    </Background>\n  );\n};\n\nexport default App;\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport favoritesReducer from \"./store/favorites\";\r\nimport commentsReducer from \"./store/comments\";\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    favorites: favoritesReducer,\r\n    comments: commentsReducer,\r\n  },\r\n});\r\nexport default store;\r\nexport type RootState = ReturnType<typeof store.getState>;\r\nexport type AppDispatch = typeof store.dispatch;","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\nhtml, body, div, span, applet, object, iframe,\nh1, h2, h3, h4, h5, h6, p, blockquote, pre,\na, abbr, acronym, address, big, cite, code,\ndel, dfn, em, img, ins, kbd, q, s, samp,\nsmall, strike, strong, sub, sup, tt, var,\nb, u, i, center,\ndl, dt, dd, ol, ul, li,\nfieldset, form, label, legend,\ntable, caption, tbody, tfoot, thead, tr, th, td,\narticle, aside, canvas, details, embed, \nfigure, figcaption, footer, header, hgroup, \nmenu, nav, output, ruby, section, summary,\ntime, mark, audio, video {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n/* HTML5 display-role reset for older browsers */\narticle, aside, details, figcaption, figure, \nfooter, header, hgroup, menu, nav, section {\n\tdisplay: block;\n}\nbody {\n\tline-height: 1;\n}\nol, ul {\n\tlist-style: none;\n}\nblockquote, q {\n\tquotes: none;\n}\nblockquote:before, blockquote:after,\nq:before, q:after {\n\tcontent: '';\n\tcontent: none;\n}\ntable {\n\tborder-collapse: collapse;\n\tborder-spacing: 0;\n}\na {\n\ttext-decoration:inherit;\n    color:inherit;\n}\nhtml{\n\tfont-family:sans-serif;\n}\n*{\n\tbox-sizing:border-box;\n}\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport App from \"./App\";\nimport store from \"./store\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport GlobalStyle from \"./GlobalStyle\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <GlobalStyle />\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}